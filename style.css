body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background: linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%);
    min-height: 100vh;
    margin: 0;
    padding: 20px;
    display: flex;
    justify-content: center;
    align-items: center;
}

.container {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
    padding: 30px;
    border-radius: 20px;
    box-shadow: 0 8px 32px rgba(31, 38, 135, 0.15);
    max-width: 800px;
    width: 100%;
    text-align: center;
}

.logo {
    width: 150px;
    height: auto;
    margin-bottom: 20px;
}

h1 {
    color: #065f46;
    margin-bottom: 30px;
}

.semester-select {
    margin-bottom: 25px;
}

select {
    padding: 12px 25px;
    border-radius: 8px;
    border: 2px solid #34d399;
    font-size: 16px;
}

.subject-card {
    background: rgba(52, 211, 153, 0.1);
    border: 1px solid #34d399;
    border-radius: 10px;
    padding: 15px;
    margin: 15px 0;
}

.input-group {
    display: flex;
    gap: 15px;
    margin-top: 10px;
    justify-content: center;
}

input {
    padding: 8px 12px;
    border: 1px solid #34d399;
    border-radius: 6px;
    width: 100px;
    text-align: center;
}

button {
    background: #34d399;
    color: white;
    padding: 12px 30px;
    border-radius: 8px;
    margin-top: 20px;
}

#result, #creditsResult {
    margin-top: 25px;
    padding: 15px;
    background: rgba(52, 211, 153, 0.15);
    border-radius: 8px;
}

.warning {
    color: #dc2626;
}
// (Keep the subjectsBySemester object EXACTLY as provided in the previous answer)

// Function to create input fields
function createSubjectInputs() {
    const semester = document.getElementById('semesterSelect').value;
    const subjects = subjectsBySemester[semester];
    const container = document.getElementById('subjectsContainer');
    container.innerHTML = '';

    subjects.forEach((subject, index) => {
        const card = document.createElement('div');
        card.className = 'subject-card';

        let inputsHTML = '';
        
        if (subject.isAnatomie) {
            inputsHTML = `
                ${Array.from({length: 3}, (_, i) => `
                    <div class="anatomy-group">
                        <div class="input-group">
                            <label>DS ${i+1}</label>
                            <input type="number" min="0" max="20" id="anat_ds${index}_${i}">
                        </div>
                        <div class="input-group">
                            <label>Exam ${i+1}</label>
                            <input type="number" min="0" max="20" id="anat_exam${index}_${i}">
                        </div>
                    </div>
                `).join('')}
            `;
        } else if (subject.isDermatologie) {
            inputsHTML = `
                <div class="dermatologie-grid">
                    <div class="input-group">
                        <label>DS</label>
                        <input type="number" min="0" max="20" id="derm_ds${index}">
                    </div>
                    <div class="input-group">
                        <label>Dermatologie</label>
                        <input type="number" min="0" max="20" id="derm_exam1${index}">
                    </div>
                    <div class="input-group">
                        <label>ORL</label>
                        <input type="number" min="0" max="20" id="derm_exam2${index}">
                    </div>
                    <div class="input-group">
                        <label>Ophtalmo</label>
                        <input type="number" min="0" max="20" id="derm_exam3${index}">
                    </div>
                </div>
            `;
        } else if (subject.isSpecialCase) {
            inputsHTML = `
                <div class="special-case-grid">
                    <div class="input-group">
                        <label>DS</label>
                        <input type="number" min="0" max="20" id="special_ds${index}">
                    </div>
                    <div class="input-group">
                        <label>Exam 1</label>
                        <input type="number" min="0" max="20" id="special_exam1${index}">
                    </div>
                    <div class="input-group">
                        <label>Exam 2</label>
                        <input type="number" min="0" max="20" id="special_exam2${index}">
                    </div>
                </div>
            `;
        } else if (subject.singleNote) {
            inputsHTML = `
                <div class="input-group single-note">
                    <input type="number" min="0" max="20" placeholder="Note" id="note_${index}">
                </div>
            `;
        } else {
            inputsHTML = `
                <div class="standard-grid">
                    <div class="input-group">
                        <label>DS</label>
                        <input type="number" min="0" max="20" id="ds_${index}">
                    </div>
                    <div class="input-group">
                        <label>Exam</label>
                        <input type="number" min="0" max="20" id="exam_${index}">
                    </div>
                </div>
            `;
        }

        card.innerHTML = `
            <h3>${subject.name} (Coeff: ${subject.coeff}, Cr: ${subject.credits})</h3>
            ${inputsHTML}
        `;
        container.appendChild(card);
    });
}

// Add this CSS to your stylesheet:
/*
.subject-card {
    background: #fff;
    padding: 1.5rem;
    border-radius: 10px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    margin-bottom: 1.5rem;
}

.input-group {
    margin: 0.5rem 0;
}

.input-group label {
    display: block;
    margin-bottom: 0.3rem;
    font-size: 0.9em;
    color: #666;
}

input[type="number"] {
    width: 100%;
    padding: 0.8rem;
    border: 1px solid #ddd;
    border-radius: 5px;
    font-size: 1em;
}

.anatomy-group,
.dermatologie-grid,
.special-case-grid,
.standard-grid {
    display: grid;
    gap: 1rem;
}

.anatomy-group { grid-template-columns: repeat(2, 1fr); }
.dermatologie-grid { grid-template-columns: repeat(4, 1fr); }
.special-case-grid { grid-template-columns: repeat(3, 1fr); }
.standard-grid { grid-template-columns: repeat(2, 1fr); }

@media (max-width: 768px) {
    .anatomy-group,
    .dermatologie-grid,
    .special-case-grid,
    .standard-grid {
        grid-template-columns: 1fr;
    }
    
    .input-group { margin: 0.3rem 0; }
}
*/